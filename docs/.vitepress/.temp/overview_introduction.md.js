import { resolveComponent, withCtx, createTextVNode, createVNode, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrRenderComponent, ssrRenderStyle } from "vue/server-renderer";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"Introduction","description":"An open-source UI component library for building high-quality, accessible design systems and web apps using Vue.","frontmatter":{"title":"Introduction","description":"An open-source UI component library for building high-quality, accessible design systems and web apps using Vue.","sidebar":true},"headers":[],"relativePath":"overview/introduction.md","filePath":"overview/introduction.md","lastUpdated":1696070965000}');
const _sfc_main = { name: "overview/introduction.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Description = resolveComponent("Description");
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1>`);
  _push(ssrRenderComponent(_component_Description, null, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` An open-source UI component library for building high-quality, accessible design systems and web apps using <a href="https://vuejs.org" target="_blank" rel="noopener noreferrer"${_scopeId}>Vue.js</a>. `);
      } else {
        return [
          createTextVNode(" An open-source UI component library for building high-quality, accessible design systems and web apps using "),
          createVNode("a", {
            href: "https://vuejs.org",
            target: "_blank",
            rel: "noopener noreferrer"
          }, "Vue.js"),
          createTextVNode(". ")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Radix Vue is an unofficial community-led Vue port of <a href="https://www.radix-ui.com/" target="_blank" rel="noreferrer">Radix UI</a>, thus we share the same principal and vision when building primitives.</p></div><p>Radix Primitives is a low-level UI component library with a focus on accessibility, customization and developer experience. You can use these components either as the base layer of your design system, or adopt them incrementally.</p><h2 id="vision" tabindex="-1">Vision <a class="header-anchor" href="#vision" aria-label="Permalink to &quot;Vision&quot;">​</a></h2><p>Most of us share similar definitions for common UI patterns like accordion, checkbox, combobox, dialog, dropdown, select, slider, and tooltip. These UI patterns are <a href="https://www.w3.org/TR/wai-aria-practices/#aria_ex" target="_blank" rel="noreferrer">documented by WAI-ARIA</a> and generally understood by the community.</p><p>However, the implementations provided to us by the web platform are inadequate. They&#39;re either non-existent, lacking in functionality, or cannot be customized sufficiently.</p><p>So, developers are forced to build custom components; an incredibly difficult task. As a result, most components on the web are inaccessible, non-performant, and lacking important features.</p><p>Our goal is to create a well-funded, open-source component library that the community can use to build accessible design systems.</p><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><h3 id="accessible" tabindex="-1">Accessible <a class="header-anchor" href="#accessible" aria-label="Permalink to &quot;Accessible&quot;">​</a></h3><p>Components adhere to the <a href="https://www.w3.org/TR/wai-aria-practices-1.2" target="_blank" rel="noreferrer">WAI-ARIA design patterns</a> where possible. We handle many of the difficult implementation details related to accessibility, including aria and role attributes, focus management, and keyboard navigation. Learn more in our <a href="./accessibility.html">accessibility</a> overview.</p><h3 id="unstyled" tabindex="-1">Unstyled <a class="header-anchor" href="#unstyled" aria-label="Permalink to &quot;Unstyled&quot;">​</a></h3><p>Components ship with zero styles, giving you complete control over styling. Components can be styled with any styling solution (vanilla CSS, CSS preprocessors, CSS-in-JS libraries). Learn more in our <a href="./../guides/styling.html">styling</a> guide.</p><h3 id="opened" tabindex="-1">Opened <a class="header-anchor" href="#opened" aria-label="Permalink to &quot;Opened&quot;">​</a></h3><p>Radix Primitives are designed to be customized to suit your needs. Our open component architecture provides you granular access to each component part, so you can wrap them and add your own event listeners, props, or refs.</p><h3 id="uncontrolled" tabindex="-1">Uncontrolled <a class="header-anchor" href="#uncontrolled" aria-label="Permalink to &quot;Uncontrolled&quot;">​</a></h3><p>Where applicable, components are uncontrolled by default but can also be controlled, alternatively. All of the behavior wiring is handled internally, so you can get up and running as smoothly as possible, without needing to create any local states.</p><h3 id="developer-experience" tabindex="-1">Developer experience <a class="header-anchor" href="#developer-experience" aria-label="Permalink to &quot;Developer experience&quot;">​</a></h3><p>One of our main goals is to provide the best possible developer experience. Radix Primitives provides a fully-typed API. All components share a similar API, creating a consistent and predictable experience. We&#39;ve also implemented an <code>asChild</code> prop (It&#39;s not a problem for Vue), giving users full control over the rendered element.</p><h3 id="tree-shaking-friendly" tabindex="-1">Tree-shaking friendly <a class="header-anchor" href="#tree-shaking-friendly" aria-label="Permalink to &quot;Tree-shaking friendly&quot;">​</a></h3><p>We compile all primitives into one package, so you just have to install once, and have access to all the primitives. Worry not, it is tree-shaking friendly so any unused primitives will not be included in the bundle.</p><div title="bash" class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">npm</span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}"> install radix-vue</span></span></code></pre></div><h2 id="community" tabindex="-1">Community <a class="header-anchor" href="#community" aria-label="Permalink to &quot;Community&quot;">​</a></h2><h3 id="discord" tabindex="-1">Discord <a class="header-anchor" href="#discord" aria-label="Permalink to &quot;Discord&quot;">​</a></h3><p>To get involved with the Radix community, ask questions, and share tips, join our Discord.</p><p><a href="https://discord.gg/jZUsrAADe5" target="_blank" rel="noreferrer">Join our Discord</a></p><h3 id="twitter" tabindex="-1">Twitter <a class="header-anchor" href="#twitter" aria-label="Permalink to &quot;Twitter&quot;">​</a></h3><p>To receive updates on new primitives, announcements, blog posts, and general Radix tips, follow along on Twitter.</p><p><a href="https://twitter.com/radix_vue" target="_blank" rel="noreferrer">Follow Radix on Twitter</a></p><h3 id="github" tabindex="-1">GitHub <a class="header-anchor" href="#github" aria-label="Permalink to &quot;GitHub&quot;">​</a></h3><p>To file issues, request features, and contribute, check out our GitHub.</p><p><a href="https://github.com/radix-vue/radix-vue" target="_blank" rel="noreferrer">GitHub repo</a></p><p><a href="https://github.com/radix-vue/radix-vue/CODE_OF_CONDUCT.md" target="_blank" rel="noreferrer">Code of conduct</a></p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("overview/introduction.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const introduction = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  introduction as default
};
